# depends_onを使用して適切な起動順を指定 → まずprometheus、次にnode、その後grafana、最後にnginxが起動する。
# healthcheckを設定して、サービスが準備完了するまで次のコンテナを待機 → 例えば、Grafanaが完全に起動するまでNginxを待機させることで、リバースプロキシの失敗を防ぐ。
# ネットワークを明示的に指定 → すべてのコンテナがmynetworkというカスタムブリッジネットワーク上で動作する。
# これで、各コンテナが適切な順序で起動し、依存関係に基づいてスムーズに動作する。

services:
  prometheus:
    image: prom/prometheus:v3.4.0  # 5月24日時点で最新
    container_name: prometheus
    networks:  # カスタムブリッジネットワーク。
      - mynetwork
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "127.0.0.1:9090:9090"
    restart: unless-stopped  # 再起動ポリシーでunless-stoppedに設定。手動で停止しない限り再起動する。
    healthcheck:  # コンテナが立ち上がったかチェック。
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090"]
      interval: 10s
      timeout: 5s
      retries: 3

  node:  # node-expoter公式ドキュメントの設定（network_modeの部分だけカスタムネットワークに変更）。
    image: quay.io/prometheus/node-exporter:v1.9.1  # 5月24日時点で最新
    container_name: node
    command:
      - "--path.rootfs=/host"
    networks:  # カスタムブリッジネットワーク。
      - mynetwork
    pid: host  # ホストOSのプロセスID (PID) 名前空間をコンテナと共有
    restart: unless-stopped  # 再起動ポリシーでunless-stoppedに設定。手動で停止しない限り再起動する。
    volumes:
      - '/:/host:ro,rslave'
    healthcheck:  # コンテナが立ち上がったかチェック。
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9100"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:  # 依存関係のコンテナを設定。
      prometheus:
        condition: service_healthy
  
  grafana:
    image: grafana/grafana-oss:12.0.1  # 5月24日時点で最新
    container_name: grafana
    networks:  # カスタムブリッジネットワーク。
      - mynetwork
    volumes:
      - ./grafana/data:/var/lib/grafana
    ports:
      - "3000:3000"
    restart: unless-stopped  # 再起動ポリシーでunless-stoppedに設定。手動で停止しない限り再起動する。
    healthcheck:  # コンテナが立ち上がったかチェック。
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:  # 依存関係のコンテナを設定。
      prometheus:
        condition: service_healthy
      node:
        condition: service_healthy

  nginx:
    image: nginx:1.28.0  # 5月24日時点で最新
    container_name: nginx
    networks:  # カスタムブリッジネットワーク。
      - mynetwork
    volumes:
      - ./secret/ssl:/etc/ssl
      - ./secret/.htpasswd:/etc/nginx/.htpasswd
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped  # 再起動ポリシーでunless-stoppedに設定。手動で停止しない限り再起動する。
    depends_on:  # 依存関係のコンテナを設定。
      grafana:
        condition: service_healthy

networks:  # カスタムブリッジネットワークの作成。
  mynetwork:
    driver: bridge

